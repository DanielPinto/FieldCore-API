// <auto-generated />
using FieldCoreAPI.Datas;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FieldCoreAPI.Migrations
{
    [DbContext(typeof(FieldCoreAPIDBContext))]
    [Migration("20230710183935_MigrateCreateModelRegional")]
    partial class MigrateCreateModelRegional
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FieldCoreAPI.Models.RegionalModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Regionais");
                });

            modelBuilder.Entity("FieldCoreAPI.Models.UnidadeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("RegionalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionalId");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("FieldCoreAPI.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Id_Corporate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UnidadeModelUserModel", b =>
                {
                    b.Property<int>("UnidadesId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("UnidadesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("UnidadeModelUserModel");
                });

            modelBuilder.Entity("FieldCoreAPI.Models.UnidadeModel", b =>
                {
                    b.HasOne("FieldCoreAPI.Models.RegionalModel", "Regional")
                        .WithMany("Unidades")
                        .HasForeignKey("RegionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regional");
                });

            modelBuilder.Entity("UnidadeModelUserModel", b =>
                {
                    b.HasOne("FieldCoreAPI.Models.UnidadeModel", null)
                        .WithMany()
                        .HasForeignKey("UnidadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FieldCoreAPI.Models.UserModel", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FieldCoreAPI.Models.RegionalModel", b =>
                {
                    b.Navigation("Unidades");
                });
#pragma warning restore 612, 618
        }
    }
}
